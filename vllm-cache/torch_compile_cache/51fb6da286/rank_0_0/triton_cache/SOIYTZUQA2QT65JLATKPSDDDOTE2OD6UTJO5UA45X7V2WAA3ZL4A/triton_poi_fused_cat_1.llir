; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite)
define amdgpu_kernel void @triton_poi_fused_cat_1(ptr addrspace(1) inreg nocapture readonly %0, ptr addrspace(1) inreg nocapture readonly %1, ptr addrspace(1) inreg nocapture readonly %2, ptr addrspace(1) inreg nocapture writeonly %3, i32 inreg %4, ptr addrspace(1) inreg nocapture readnone %5) local_unnamed_addr #0 !dbg !4 {
  %7 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !7
  %8 = shl i32 %7, 9, !dbg !8
  %9 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !9
  %10 = shl i32 %9, 1, !dbg !9
  %11 = and i32 %10, 510, !dbg !9
  %12 = or disjoint i32 %11, %8, !dbg !10
  %13 = sdiv i32 %12, 128, !dbg !11
  %14 = mul i32 %13, 128, !dbg !12
  %.decomposed = sub i32 %12, %14, !dbg !12
  %15 = srem i32 %13, 32, !dbg !13
  %16 = sdiv i32 %12, 4096, !dbg !14
  %17 = sext i32 %.decomposed to i64, !dbg !15
  %18 = icmp slt i32 %.decomposed, 64, !dbg !15
  %19 = shl nsw i32 %15, 7, !dbg !16
  %20 = mul i32 %16, 6144, !dbg !17
  %21 = add i32 %19, %20, !dbg !18
  %22 = add i32 %21, %.decomposed, !dbg !19
  %23 = sext i32 %22 to i64, !dbg !20
  %24 = getelementptr bfloat, ptr addrspace(1) %0, i64 %23, !dbg !20
  %25 = insertelement <2 x i1> poison, i1 %18, i64 0, !dbg !21
  %26 = shufflevector <2 x i1> %25, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !21
  %27 = tail call <2 x bfloat> @llvm.masked.load.v2bf16.p1(ptr addrspace(1) %24, i32 16, <2 x i1> %26, <2 x bfloat> zeroinitializer), !dbg !21
  %bc = bitcast <2 x bfloat> %27 to <2 x i16>, !dbg !22
  %28 = zext <2 x i16> %bc to <2 x i32>, !dbg !22
  %29 = shl nuw <2 x i32> %28, splat (i32 16), !dbg !22
  %30 = sext i32 %16 to i64, !dbg !23
  %31 = getelementptr i64, ptr addrspace(1) %1, i64 %30, !dbg !23
  %32 = insertelement <1 x i1> poison, i1 %18, i64 0, !dbg !24
  %33 = tail call <1 x i64> @llvm.masked.load.v1i64.p1(ptr addrspace(1) %31, i32 8, <1 x i1> %32, <1 x i64> zeroinitializer), !dbg !24
  %34 = extractelement <1 x i64> %33, i64 0, !dbg !24
  %35 = lshr i64 %34, 46, !dbg !25
  %36 = and i64 %35, 131072, !dbg !25
  %37 = add i64 %36, %34, !dbg !25
  %38 = shl i64 %37, 7, !dbg !26
  %39 = getelementptr bfloat, ptr addrspace(1) %2, i64 %38, !dbg !27
  %40 = getelementptr bfloat, ptr addrspace(1) %39, i64 %17, !dbg !27
  %41 = tail call <2 x bfloat> @llvm.masked.load.v2bf16.p1(ptr addrspace(1) %40, i32 16, <2 x i1> %26, <2 x bfloat> zeroinitializer), !dbg !28
  %bc2 = bitcast <2 x bfloat> %41 to <2 x i16>, !dbg !29
  %42 = zext <2 x i16> %bc2 to <2 x i32>, !dbg !29
  %43 = shl nuw <2 x i32> %42, splat (i32 16), !dbg !29
  %44 = or disjoint i32 %19, 64, !dbg !30
  %45 = add i32 %44, %20, !dbg !31
  %46 = add i32 %45, %.decomposed, !dbg !32
  %47 = sext i32 %46 to i64, !dbg !33
  %48 = getelementptr bfloat, ptr addrspace(1) %0, i64 %47, !dbg !33
  %49 = tail call <2 x bfloat> @llvm.masked.load.v2bf16.p1(ptr addrspace(1) %48, i32 16, <2 x i1> %26, <2 x bfloat> zeroinitializer), !dbg !34
  %bc4 = bitcast <2 x bfloat> %49 to <2 x i16>, !dbg !35
  %50 = zext <2 x i16> %bc4 to <2 x i32>, !dbg !35
  %51 = shl nuw <2 x i32> %50, splat (i32 16), !dbg !35
  %52 = or disjoint i64 %38, 64, !dbg !36
  %53 = getelementptr bfloat, ptr addrspace(1) %2, i64 %52, !dbg !37
  %54 = getelementptr bfloat, ptr addrspace(1) %53, i64 %17, !dbg !37
  %55 = tail call <2 x bfloat> @llvm.masked.load.v2bf16.p1(ptr addrspace(1) %54, i32 16, <2 x i1> %26, <2 x bfloat> zeroinitializer), !dbg !38
  %bc6 = bitcast <2 x bfloat> %55 to <2 x i16>, !dbg !39
  %56 = zext <2 x i16> %bc6 to <2 x i32>, !dbg !39
  %57 = shl nuw <2 x i32> %56, splat (i32 16), !dbg !39
  %58 = icmp sgt i32 %.decomposed, 63, !dbg !40
  %59 = add nsw i32 %.decomposed, -64, !dbg !41
  %60 = add i32 %45, %59, !dbg !42
  %61 = sext i32 %60 to i64, !dbg !43
  %62 = getelementptr bfloat, ptr addrspace(1) %0, i64 %61, !dbg !43
  %63 = insertelement <2 x i1> poison, i1 %58, i64 0, !dbg !44
  %64 = shufflevector <2 x i1> %63, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !44
  %65 = tail call <2 x bfloat> @llvm.masked.load.v2bf16.p1(ptr addrspace(1) %62, i32 16, <2 x i1> %64, <2 x bfloat> zeroinitializer), !dbg !44
  %bc8 = bitcast <2 x bfloat> %65 to <2 x i16>, !dbg !45
  %66 = zext <2 x i16> %bc8 to <2 x i32>, !dbg !45
  %67 = shl nuw <2 x i32> %66, splat (i32 16), !dbg !45
  %68 = insertelement <1 x i1> poison, i1 %58, i64 0, !dbg !46
  %69 = tail call <1 x i64> @llvm.masked.load.v1i64.p1(ptr addrspace(1) %31, i32 8, <1 x i1> %68, <1 x i64> zeroinitializer), !dbg !46
  %70 = extractelement <1 x i64> %69, i64 0, !dbg !46
  %71 = lshr i64 %70, 46, !dbg !47
  %72 = and i64 %71, 131072, !dbg !47
  %73 = add i64 %72, %70, !dbg !47
  %74 = shl i64 %73, 7, !dbg !48
  %75 = sext i32 %59 to i64, !dbg !49
  %76 = getelementptr bfloat, ptr addrspace(1) %2, i64 %74, !dbg !50
  %77 = getelementptr bfloat, ptr addrspace(1) %76, i64 %75, !dbg !50
  %78 = tail call <2 x bfloat> @llvm.masked.load.v2bf16.p1(ptr addrspace(1) %77, i32 16, <2 x i1> %64, <2 x bfloat> zeroinitializer), !dbg !51
  %bc10 = bitcast <2 x bfloat> %78 to <2 x i16>, !dbg !52
  %79 = zext <2 x i16> %bc10 to <2 x i32>, !dbg !52
  %80 = shl nuw <2 x i32> %79, splat (i32 16), !dbg !52
  %81 = add i32 %21, %59, !dbg !53
  %82 = sext i32 %81 to i64, !dbg !54
  %83 = getelementptr bfloat, ptr addrspace(1) %0, i64 %82, !dbg !54
  %84 = tail call <2 x bfloat> @llvm.masked.load.v2bf16.p1(ptr addrspace(1) %83, i32 16, <2 x i1> %64, <2 x bfloat> zeroinitializer), !dbg !55
  %bc12 = bitcast <2 x bfloat> %84 to <2 x i16>, !dbg !56
  %85 = zext <2 x i16> %bc12 to <2 x i32>, !dbg !56
  %86 = shl nuw <2 x i32> %85, splat (i32 16), !dbg !56
  %87 = or disjoint i64 %74, 64, !dbg !57
  %88 = getelementptr bfloat, ptr addrspace(1) %2, i64 %87, !dbg !58
  %89 = getelementptr bfloat, ptr addrspace(1) %88, i64 %75, !dbg !58
  %90 = tail call <2 x bfloat> @llvm.masked.load.v2bf16.p1(ptr addrspace(1) %89, i32 16, <2 x i1> %64, <2 x bfloat> zeroinitializer), !dbg !59
  %bc14 = bitcast <2 x bfloat> %90 to <2 x i16>, !dbg !60
  %91 = zext <2 x i16> %bc14 to <2 x i32>, !dbg !60
  %92 = shl nuw <2 x i32> %91, splat (i32 16), !dbg !60
  %93 = sext i32 %12 to i64, !dbg !61
  %94 = getelementptr bfloat, ptr addrspace(1) %3, i64 %93, !dbg !61
  %95 = bitcast <2 x i32> %29 to <2 x float>, !dbg !22
  %96 = bitcast <2 x i32> %43 to <2 x float>, !dbg !29
  %97 = fmul <2 x float> %95, %96, !dbg !62
  %98 = bitcast <2 x i32> %51 to <2 x float>, !dbg !35
  %99 = bitcast <2 x i32> %57 to <2 x float>, !dbg !39
  %100 = fmul <2 x float> %98, %99, !dbg !63
  %101 = fsub <2 x float> %97, %100, !dbg !64
  %102 = bitcast <2 x i32> %67 to <2 x float>, !dbg !45
  %103 = bitcast <2 x i32> %80 to <2 x float>, !dbg !52
  %104 = fmul <2 x float> %102, %103, !dbg !65
  %105 = bitcast <2 x i32> %86 to <2 x float>, !dbg !56
  %106 = bitcast <2 x i32> %92 to <2 x float>, !dbg !60
  %107 = fmul <2 x float> %105, %106, !dbg !66
  %108 = fadd <2 x float> %104, %107, !dbg !67
  %109 = insertelement <2 x i1> poison, i1 %18, i64 0, !dbg !68
  %110 = shufflevector <2 x i1> %109, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !68
  %111 = select <2 x i1> %110, <2 x float> %101, <2 x float> %108, !dbg !68
  %112 = bitcast <2 x float> %111 to <2 x i32>, !dbg !69
  %113 = and <2 x i32> %112, <i32 65535, i32 2139095040>, !dbg !69
  %114 = icmp ne <2 x i32> %113, <i32 0, i32 2139095040>, !dbg !69
  %115 = icmp eq <2 x i32> %113, <i32 0, i32 2139095040>, !dbg !69
  %116 = shufflevector <2 x i1> %114, <2 x i1> %115, <2 x i32> <i32 0, i32 3>, !dbg !69
  %117 = lshr <2 x i32> %112, splat (i32 16), !dbg !69
  %118 = and <2 x i32> %117, splat (i32 1), !dbg !69
  %119 = add nuw nsw <2 x i32> %118, splat (i32 32767), !dbg !69
  %120 = and <2 x i32> %112, <i32 2139095040, i32 65535>, !dbg !69
  %121 = icmp eq <2 x i32> %120, <i32 2139095040, i32 0>, !dbg !69
  %122 = icmp ne <2 x i32> %120, <i32 2139095040, i32 0>, !dbg !69
  %123 = shufflevector <2 x i1> %121, <2 x i1> %122, <2 x i32> <i32 0, i32 3>, !dbg !69
  %124 = shufflevector <2 x i1> %123, <2 x i1> %116, <2 x i32> <i32 0, i32 3>, !dbg !69
  %125 = select <2 x i1> %124, <2 x i32> zeroinitializer, <2 x i32> %119, !dbg !69
  %126 = add <2 x i32> %125, %112, !dbg !69
  %127 = and <2 x i1> %116, %123, !dbg !69
  %128 = or <2 x i32> %112, splat (i32 65536), !dbg !69
  %129 = select <2 x i1> %127, <2 x i32> %128, <2 x i32> %126, !dbg !69
  %130 = lshr <2 x i32> %129, splat (i32 16), !dbg !69
  %131 = trunc nuw <2 x i32> %130 to <2 x i16>, !dbg !69
  store <2 x i16> %131, ptr addrspace(1) %94, align 16, !dbg !69
  ret void, !dbg !70
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <2 x bfloat> @llvm.masked.load.v2bf16.p1(ptr addrspace(1) nocapture, i32 immarg, <2 x i1>, <2 x bfloat>) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <1 x i64> @llvm.masked.load.v1i64.p1(ptr addrspace(1) nocapture, i32 immarg, <1 x i1>, <1 x i64>) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) "amdgpu-flat-work-group-size"="1,256" "amdgpu-no-agpr" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" "uniform-work-group-size"="false" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"amdhsa_code_object_version", i32 400}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2h2po2sjromnyxfdwdgfyrcjxoujqkeyrh3bo7nvthtmpqcydsh.py", directory: "/home/vllm/.cache/vllm/torch_compile_cache/51fb6da286/rank_0_0/inductor_cache/2h")
!4 = distinct !DISubprogram(name: "triton_poi_fused_cat_1", linkageName: "triton_poi_fused_cat_1", scope: !3, file: !3, line: 19, type: !5, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = !DILocation(line: 20, column: 28, scope: !4)
!8 = !DILocation(line: 20, column: 33, scope: !4)
!9 = !DILocation(line: 21, column: 36, scope: !4)
!10 = !DILocation(line: 21, column: 23, scope: !4)
!11 = !DILocation(line: 24, column: 21, scope: !4)
!12 = !DILocation(line: 23, column: 19, scope: !4)
!13 = !DILocation(line: 24, column: 28, scope: !4)
!14 = !DILocation(line: 25, column: 19, scope: !4)
!15 = !DILocation(line: 31, column: 18, scope: !4)
!16 = !DILocation(line: 33, column: 34, scope: !4)
!17 = !DILocation(line: 33, column: 44, scope: !4)
!18 = !DILocation(line: 33, column: 39, scope: !4)
!19 = !DILocation(line: 33, column: 50, scope: !4)
!20 = !DILocation(line: 33, column: 30, scope: !4)
!21 = !DILocation(line: 33, column: 56, scope: !4)
!22 = !DILocation(line: 33, column: 106, scope: !4)
!23 = !DILocation(line: 34, column: 30, scope: !4)
!24 = !DILocation(line: 34, column: 35, scope: !4)
!25 = !DILocation(line: 38, column: 34, scope: !4)
!26 = !DILocation(line: 40, column: 35, scope: !4)
!27 = !DILocation(line: 40, column: 31, scope: !4)
!28 = !DILocation(line: 40, column: 50, scope: !4)
!29 = !DILocation(line: 40, column: 100, scope: !4)
!30 = !DILocation(line: 42, column: 36, scope: !4)
!31 = !DILocation(line: 42, column: 45, scope: !4)
!32 = !DILocation(line: 42, column: 56, scope: !4)
!33 = !DILocation(line: 42, column: 31, scope: !4)
!34 = !DILocation(line: 42, column: 62, scope: !4)
!35 = !DILocation(line: 42, column: 112, scope: !4)
!36 = !DILocation(line: 43, column: 36, scope: !4)
!37 = !DILocation(line: 43, column: 31, scope: !4)
!38 = !DILocation(line: 43, column: 55, scope: !4)
!39 = !DILocation(line: 43, column: 105, scope: !4)
!40 = !DILocation(line: 48, column: 20, scope: !4)
!41 = !DILocation(line: 52, column: 64, scope: !4)
!42 = !DILocation(line: 52, column: 56, scope: !4)
!43 = !DILocation(line: 52, column: 31, scope: !4)
!44 = !DILocation(line: 52, column: 70, scope: !4)
!45 = !DILocation(line: 52, column: 121, scope: !4)
!46 = !DILocation(line: 53, column: 36, scope: !4)
!47 = !DILocation(line: 57, column: 35, scope: !4)
!48 = !DILocation(line: 59, column: 35, scope: !4)
!49 = !DILocation(line: 59, column: 44, scope: !4)
!50 = !DILocation(line: 59, column: 31, scope: !4)
!51 = !DILocation(line: 59, column: 58, scope: !4)
!52 = !DILocation(line: 59, column: 109, scope: !4)
!53 = !DILocation(line: 61, column: 51, scope: !4)
!54 = !DILocation(line: 61, column: 31, scope: !4)
!55 = !DILocation(line: 61, column: 65, scope: !4)
!56 = !DILocation(line: 61, column: 116, scope: !4)
!57 = !DILocation(line: 62, column: 36, scope: !4)
!58 = !DILocation(line: 62, column: 31, scope: !4)
!59 = !DILocation(line: 62, column: 63, scope: !4)
!60 = !DILocation(line: 62, column: 114, scope: !4)
!61 = !DILocation(line: 68, column: 25, scope: !4)
!62 = !DILocation(line: 41, column: 19, scope: !4)
!63 = !DILocation(line: 44, column: 20, scope: !4)
!64 = !DILocation(line: 45, column: 20, scope: !4)
!65 = !DILocation(line: 60, column: 20, scope: !4)
!66 = !DILocation(line: 63, column: 20, scope: !4)
!67 = !DILocation(line: 64, column: 20, scope: !4)
!68 = !DILocation(line: 0, scope: !4)
!69 = !DILocation(line: 68, column: 37, scope: !4)
!70 = !DILocation(line: 68, column: 4, scope: !4)

#blocked = #ttg.blocked<{sizePerThread = [1, 4], threadsPerWarp = [2, 32], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [64], warpsPerCTA = [4], order = [0]}>
#loc = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":540:0)
#loc1 = loc(unknown)
#loc5 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":567:36)
#loc39 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":591:25)
#loc47 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":598:28)
#loc64 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":613:21)
#loc77 = loc(callsite(#loc1 at #loc5))
#loc93 = loc(callsite(#loc1 at #loc39))
#loc96 = loc(callsite(#loc1 at #loc47))
#loc99 = loc(callsite(#loc1 at #loc64))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "hip:gfx90a", "ttg.threads-per-warp" = 64 : i32} {
  tt.func public @reduce_segments(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":540:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":540:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":540:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":540:0), %arg4: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":540:0), %arg5: i64 {tt.divisibility = 16 : i32} loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":540:0), %arg6: i64 {tt.divisibility = 16 : i32} loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":540:0), %arg7: i64 {tt.divisibility = 16 : i32} loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":540:0), %arg8: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":540:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c255_i32 = arith.constant 255 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c65536_i64 = arith.constant 65536 : i64 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<16xf32, #blocked1> loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_2 = arith.constant dense<0xFF800000> : tensor<16xf32, #blocked1> loc(#loc1)
    %c512_i64 = arith.constant 512 : i64 loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<128xi32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<128xi32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<16x128xf32, #blocked> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst_6 = arith.constant dense<128> : tensor<128xi32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<128> : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc1)
    %cst_8 = arith.constant dense<1> : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc1)
    %cst_9 = arith.constant dense<0> : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc1)
    %cst_10 = arith.constant dense<0xFF800000> : tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc1)
    %cst_11 = arith.constant dense<128> : tensor<16x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2:2 = scf.while (%arg9 = %c0_i32, %arg10 = %c1_i32) : (i32, i32) -> (i32, i32) {
      %97 = arith.cmpi slt, %arg9, %arg10 : i32 loc(#loc76)
      scf.condition(%97) %arg9, %arg10 : i32, i32 loc(#loc76)
    } do {
    ^bb0(%arg9: i32 loc(callsite(#loc1 at #loc5)), %arg10: i32 loc(callsite(#loc1 at #loc5))):
      %97 = arith.addi %arg9, %arg10 : i32 loc(#loc78)
      %98 = arith.divsi %97, %c2_i32 : i32 loc(#loc79)
      %99 = tt.addptr %arg8, %98 : !tt.ptr<i32>, i32 loc(#loc80)
      %100 = tt.load %99 : !tt.ptr<i32> loc(#loc81)
      %101 = arith.cmpi sle, %100, %0 : i32 loc(#loc82)
      %102 = arith.select %101, %arg10, %98 : i32 loc(#loc83)
      %103 = scf.if %101 -> (i32) {
        %104 = arith.addi %98, %c1_i32 : i32 loc(#loc84)
        scf.yield %104 : i32 loc(#loc84)
      } else {
        scf.yield %arg9 : i32 loc(#loc77)
      } loc(#loc83)
      scf.yield %103, %102 : i32, i32 loc(#loc85)
    } loc(#loc75)
    %3 = arith.subi %2#0, %c1_i32 : i32 loc(#loc86)
    %4 = tt.addptr %arg4, %3 : !tt.ptr<i32>, i32 loc(#loc16)
    %5 = tt.load %4 : !tt.ptr<i32> loc(#loc17)
    %6 = arith.addi %5, %c255_i32 : i32 loc(#loc87)
    %7 = arith.divsi %6, %c256_i32 : i32 loc(#loc88)
    %8 = arith.muli %7, %c16_i32 : i32 loc(#loc21)
    %9 = arith.addi %5, %8 : i32 loc(#loc89)
    %10 = arith.subi %9, %c1_i32 : i32 loc(#loc90)
    %11 = arith.divsi %10, %8 : i32 loc(#loc91)
    %12 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc24)
    %13 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #blocked1> loc(#loc24)
    %14 = tt.splat %11 : i32 -> tensor<16xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc25)
    %15 = tt.splat %11 : i32 -> tensor<16xi32, #blocked1> loc(#loc25)
    %16 = arith.cmpi slt, %12, %14 : tensor<16xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc26)
    %17 = arith.cmpi slt, %13, %15 : tensor<16xi32, #blocked1> loc(#loc26)
    %18 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc27)
    %19 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked1> loc(#loc27)
    %20 = arith.cmpi slt, %18, %cst_7 : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc28)
    %21 = arith.cmpi slt, %19, %cst_6 : tensor<128xi32, #blocked1> loc(#loc28)
    %22 = arith.select %20, %cst_8, %cst_9 : tensor<128xi1, #ttg.slice<{dim = 0, parent = #blocked}>>, tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc29)
    %23 = arith.select %21, %cst_4, %cst_3 : tensor<128xi1, #blocked1>, tensor<128xi32, #blocked1> loc(#loc29)
    %24 = arith.cmpi ne, %22, %cst_9 : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc30)
    %25 = arith.cmpi ne, %23, %cst_3 : tensor<128xi32, #blocked1> loc(#loc30)
    %26 = arith.extsi %0 : i32 to i64 loc(#loc31)
    %27 = arith.muli %26, %c512_i64 : i64 loc(#loc32)
    %28 = arith.muli %1, %c16_i32 : i32 loc(#loc33)
    %29 = arith.extsi %28 : i32 to i64 loc(#loc34)
    %30 = arith.addi %27, %29 : i64 loc(#loc34)
    %31 = arith.extsi %12 : tensor<16xi32, #ttg.slice<{dim = 1, parent = #blocked}>> to tensor<16xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc35)
    %32 = arith.extsi %13 : tensor<16xi32, #blocked1> to tensor<16xi64, #blocked1> loc(#loc35)
    %33 = tt.splat %30 : i64 -> tensor<16xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc35)
    %34 = tt.splat %30 : i64 -> tensor<16xi64, #blocked1> loc(#loc35)
    %35 = arith.addi %33, %31 : tensor<16xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc35)
    %36 = arith.addi %34, %32 : tensor<16xi64, #blocked1> loc(#loc35)
    %37 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc36)
    %38 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked1> loc(#loc36)
    %39 = tt.addptr %37, %35 : tensor<16x!tt.ptr<f32>, #ttg.slice<{dim = 1, parent = #blocked}>>, tensor<16xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc36)
    %40 = tt.addptr %38, %36 : tensor<16x!tt.ptr<f32>, #blocked1>, tensor<16xi64, #blocked1> loc(#loc36)
    %41 = tt.load %39, %16, %cst_10 : tensor<16x!tt.ptr<f32>, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc37)
    %42 = tt.load %40, %17, %cst_2 : tensor<16x!tt.ptr<f32>, #blocked1> loc(#loc37)
    %43 = "tt.reduce"(%42) <{axis = 0 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc39)), %arg10: f32 loc(callsite(#loc1 at #loc39))):
      %97 = arith.maxnumf %arg9, %arg10 : f32 loc(#loc100)
      tt.reduce.return %97 : f32 loc(#loc92)
    }) : (tensor<16xf32, #blocked1>) -> f32 loc(#loc92)
    %44 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked1> loc(#loc41)
    %45 = tt.addptr %44, %36 : tensor<16x!tt.ptr<f32>, #blocked1>, tensor<16xi64, #blocked1> loc(#loc41)
    %46 = tt.load %45, %17, %cst_0 : tensor<16x!tt.ptr<f32>, #blocked1> loc(#loc42)
    %47 = tt.splat %43 : f32 -> tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc43)
    %48 = tt.splat %43 : f32 -> tensor<16xf32, #blocked1> loc(#loc43)
    %49 = arith.subf %41, %47 : tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc43)
    %50 = arith.subf %42, %48 : tensor<16xf32, #blocked1> loc(#loc43)
    %51 = math.exp %49 : tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc44)
    %52 = math.exp %50 : tensor<16xf32, #blocked1> loc(#loc44)
    %53 = arith.mulf %46, %52 : tensor<16xf32, #blocked1> loc(#loc45)
    %54 = "tt.reduce"(%53) <{axis = 0 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc47)), %arg10: f32 loc(callsite(#loc1 at #loc47))):
      %97 = arith.addf %arg9, %arg10 : f32 loc(#loc101)
      tt.reduce.return %97 : f32 loc(#loc95)
    }) : (tensor<16xf32, #blocked1>) -> f32 loc(#loc95)
    %55 = arith.muli %26, %c65536_i64 : i64 loc(#loc49)
    %56 = arith.muli %1, %c2048_i32 : i32 loc(#loc50)
    %57 = arith.extsi %56 : i32 to i64 loc(#loc51)
    %58 = arith.addi %55, %57 : i64 loc(#loc51)
    %59 = tt.expand_dims %12 {axis = 1 : i32} : tensor<16xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<16x1xi32, #blocked> loc(#loc52)
    %60 = arith.muli %59, %cst_11 : tensor<16x1xi32, #blocked> loc(#loc53)
    %61 = arith.extsi %60 : tensor<16x1xi32, #blocked> to tensor<16x1xi64, #blocked> loc(#loc54)
    %62 = tt.splat %58 : i64 -> tensor<16x1xi64, #blocked> loc(#loc54)
    %63 = arith.addi %62, %61 : tensor<16x1xi64, #blocked> loc(#loc54)
    %64 = tt.expand_dims %18 {axis = 0 : i32} : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc55)
    %65 = arith.extsi %64 : tensor<1x128xi32, #blocked> to tensor<1x128xi64, #blocked> loc(#loc56)
    %66 = tt.broadcast %63 : tensor<16x1xi64, #blocked> -> tensor<16x128xi64, #blocked> loc(#loc56)
    %67 = tt.broadcast %65 : tensor<1x128xi64, #blocked> -> tensor<16x128xi64, #blocked> loc(#loc56)
    %68 = arith.addi %66, %67 : tensor<16x128xi64, #blocked> loc(#loc56)
    %69 = tt.expand_dims %16 {axis = 1 : i32} : tensor<16xi1, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<16x1xi1, #blocked> loc(#loc57)
    %70 = tt.expand_dims %24 {axis = 0 : i32} : tensor<128xi1, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi1, #blocked> loc(#loc58)
    %71 = tt.broadcast %69 : tensor<16x1xi1, #blocked> -> tensor<16x128xi1, #blocked> loc(#loc59)
    %72 = tt.broadcast %70 : tensor<1x128xi1, #blocked> -> tensor<16x128xi1, #blocked> loc(#loc59)
    %73 = arith.andi %71, %72 : tensor<16x128xi1, #blocked> loc(#loc59)
    %74 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x128x!tt.ptr<f32>, #blocked> loc(#loc60)
    %75 = tt.addptr %74, %68 : tensor<16x128x!tt.ptr<f32>, #blocked>, tensor<16x128xi64, #blocked> loc(#loc60)
    %76 = tt.load %75, %73, %cst_5 : tensor<16x128x!tt.ptr<f32>, #blocked> loc(#loc61)
    %77 = tt.expand_dims %51 {axis = 1 : i32} : tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<16x1xf32, #blocked> loc(#loc62)
    %78 = tt.broadcast %77 : tensor<16x1xf32, #blocked> -> tensor<16x128xf32, #blocked> loc(#loc63)
    %79 = arith.mulf %76, %78 : tensor<16x128xf32, #blocked> loc(#loc63)
    %80 = "tt.reduce"(%79) <{axis = 0 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc64)), %arg10: f32 loc(callsite(#loc1 at #loc64))):
      %97 = arith.addf %arg9, %arg10 : f32 loc(#loc102)
      tt.reduce.return %97 : f32 loc(#loc98)
    }) : (tensor<16x128xf32, #blocked>) -> tensor<128xf32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc98)
    %81 = arith.cmpf oeq, %54, %cst_1 : f32 loc(#loc65)
    %82 = tt.splat %54 : f32 -> tensor<128xf32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc66)
    %83 = arith.divf %80, %82 : tensor<128xf32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc66)
    %84 = tt.splat %81 : i1 -> tensor<128xi1, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc67)
    %85 = arith.select %84, %cst, %83 : tensor<128xi1, #ttg.slice<{dim = 0, parent = #blocked}>>, tensor<128xf32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc67)
    %86 = arith.muli %26, %arg5 : i64 loc(#loc68)
    %87 = arith.extsi %1 : i32 to i64 loc(#loc69)
    %88 = arith.muli %87, %arg6 : i64 loc(#loc69)
    %89 = arith.addi %86, %88 : i64 loc(#loc70)
    %90 = arith.extsi %19 : tensor<128xi32, #blocked1> to tensor<128xi64, #blocked1> loc(#loc71)
    %91 = tt.splat %89 : i64 -> tensor<128xi64, #blocked1> loc(#loc71)
    %92 = arith.addi %91, %90 : tensor<128xi64, #blocked1> loc(#loc71)
    %93 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<128x!tt.ptr<bf16>, #blocked1> loc(#loc72)
    %94 = tt.addptr %93, %92 : tensor<128x!tt.ptr<bf16>, #blocked1>, tensor<128xi64, #blocked1> loc(#loc72)
    %95 = arith.truncf %85 : tensor<128xf32, #ttg.slice<{dim = 0, parent = #blocked}>> to tensor<128xbf16, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc73)
    %96 = ttg.convert_layout %95 : tensor<128xbf16, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<128xbf16, #blocked1> loc(#loc73)
    tt.store %94, %96, %25 : tensor<128x!tt.ptr<bf16>, #blocked1> loc(#loc73)
    tt.return loc(#loc74)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":563:36)
#loc3 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":564:35)
#loc4 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":38:4)
#loc6 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":38:17)
#loc7 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":39:22)
#loc8 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":39:32)
#loc9 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":40:44)
#loc10 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":40:22)
#loc11 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":43:22)
#loc12 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":43:11)
#loc13 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":44:25)
#loc14 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":43:8)
#loc15 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":48:18)
#loc16 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":570:37)
#loc17 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":570:22)
#loc18 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":22:20)
#loc19 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":574:42)
#loc20 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":22:26)
#loc21 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":577:61)
#loc22 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":22:16)
#loc23 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":577:40)
#loc24 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":578:29)
#loc25 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":579:32)
#loc26 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":578:53)
#loc27 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":580:37)
#loc28 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":580:57)
#loc29 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":581:24)
#loc30 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":581:30)
#loc31 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":584:38)
#loc32 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":585:20)
#loc33 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":586:36)
#loc34 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":586:19)
#loc35 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":587:19)
#loc36 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":588:38)
#loc37 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":588:23)
#loc38 = loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":184:40)
#loc40 = loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":163:27)
#loc41 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":594:44)
#loc42 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":594:26)
#loc43 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":597:50)
#loc44 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":597:39)
#loc45 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":597:32)
#loc46 = loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":267:36)
#loc48 = loc("/usr/local/lib/python3.12/dist-packages/triton/language/standard.py":256:15)
#loc49 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":603:9)
#loc50 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":604:26)
#loc51 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":604:8)
#loc52 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":605:43)
#loc53 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":605:54)
#loc54 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":605:8)
#loc55 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":606:39)
#loc56 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":606:8)
#loc57 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":609:23)
#loc58 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":609:43)
#loc59 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":609:34)
#loc60 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":608:26)
#loc61 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":608:8)
#loc62 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":612:50)
#loc63 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":612:19)
#loc65 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":615:37)
#loc66 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":615:57)
#loc67 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":615:47)
#loc68 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":622:39)
#loc69 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":623:38)
#loc70 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":623:21)
#loc71 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":624:21)
#loc72 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":625:26)
#loc73 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":625:41)
#loc74 = loc("/usr/local/lib/python3.12/dist-packages/vllm/attention/ops/triton_unified_attention.py":625:4)
#loc75 = loc(callsite(#loc4 at #loc5))
#loc76 = loc(callsite(#loc6 at #loc5))
#loc78 = loc(callsite(#loc7 at #loc5))
#loc79 = loc(callsite(#loc8 at #loc5))
#loc80 = loc(callsite(#loc9 at #loc5))
#loc81 = loc(callsite(#loc10 at #loc5))
#loc82 = loc(callsite(#loc11 at #loc5))
#loc83 = loc(callsite(#loc12 at #loc5))
#loc84 = loc(callsite(#loc13 at #loc5))
#loc85 = loc(callsite(#loc14 at #loc5))
#loc86 = loc(callsite(#loc15 at #loc5))
#loc87 = loc(callsite(#loc18 at #loc19))
#loc88 = loc(callsite(#loc20 at #loc19))
#loc89 = loc(callsite(#loc22 at #loc23))
#loc90 = loc(callsite(#loc18 at #loc23))
#loc91 = loc(callsite(#loc20 at #loc23))
#loc92 = loc(callsite(#loc38 at #loc39))
#loc94 = loc(callsite(#loc40 at #loc38))
#loc95 = loc(callsite(#loc46 at #loc47))
#loc97 = loc(callsite(#loc48 at #loc46))
#loc98 = loc(callsite(#loc46 at #loc64))
#loc100 = loc(callsite(#loc94 at #loc39))
#loc101 = loc(callsite(#loc97 at #loc47))
#loc102 = loc(callsite(#loc97 at #loc64))
